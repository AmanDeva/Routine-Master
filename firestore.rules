rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      function isSignedIn() {
        return request.auth != null;
      }

      function isOwner() {
        return isSignedIn() && request.auth.uid == userId;
      }

      function isValidSubscription() {
        let subscription = request.resource.data;
        return subscription.isActive is bool &&
               subscription.currentPeriodEnd is timestamp &&
               subscription.cancelAtPeriodEnd is bool &&
               (subscription.lastPaymentId is string || !('lastPaymentId' in subscription)) &&
               subscription.amount is number &&
               subscription.currency is string &&
               subscription.updatedAt is timestamp;
      }

      function isValidPayment() {
        let payment = request.resource.data;
        return payment.amount is number &&
               payment.currency is string &&
               payment.paymentId is string &&
               payment.orderId is string &&
               payment.status is string &&
               payment.type is string &&
               payment.period is string &&
               payment.createdAt is timestamp;
      }

      function isValidOrder() {
        let order = request.resource.data;
        return order.amount is number &&
               order.currency is string &&
               order.status in ['created', 'completed', 'failed'] &&
               order.createdAt is timestamp &&
               (!('completedAt' in order) || order.completedAt is timestamp) &&
               (!('paymentId' in order) || order.paymentId is string);
      }

      // Allow users to read and write their own document
      allow read, write: if isOwner();

      // Tasks subcollection rules
      match /tasks/{taskId} {
        function isValidTask() {
          let task = request.resource.data;
          return task.title is string &&
                 task.title.size() <= 100 &&
                 task.time is string &&
                 task.completed is bool &&
                 (task.date is string || !('date' in task)) &&
                 task.isRecurring is bool;
        }

        allow read: if isOwner();
        allow create: if isOwner() && isValidTask();
        allow update: if isOwner() && isValidTask();
        allow delete: if isOwner();
      }

      // Subscription subcollection rules
      match /subscription/{document=**} {
        allow read: if isOwner();
        allow create, update: if isOwner() && isValidSubscription();
        allow delete: if isOwner();
      }

      // Orders subcollection rules
      match /orders/{orderId} {
        allow read: if isOwner();
        allow create: if isOwner() && isValidOrder();
        allow update: if isOwner() && isValidOrder();
        allow delete: if false; // Never allow order deletion
      }

      // Payments subcollection rules
      match /payments/{paymentId} {
        allow read: if isOwner();
        allow create: if isOwner() && isValidPayment();
        allow update: if false; // Never allow payment modification
        allow delete: if false; // Never allow payment deletion
      }
    }
  }
}